name: Phi Runtime Test

on:
  push:
    branches: [ "main", "*dev", "ci*" ]
  pull_request:
    branches: [ "main", "*dev" ]
  workflow_dispatch:

jobs:
  metal-test:
    name: Metal Test (macOS)
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Cache model files
      uses: actions/cache@v3
      with:
        path: examples/phi/setup
        key: phi-models-${{ hashFiles('examples/phi/setup/setup.sh') }}

    - name: Run setup script if needed
      working-directory: examples/phi
      run: |
        if [ ! -f setup/*.gguf ]; then
          bash ./setup/setup.sh
        else
          echo "Model files already exist, skipping setup"
        fi

    - name: Run phi example with Metal
      working-directory: examples/phi
      timeout-minutes: 5
      run: cargo run --release --features metal -- --gen_tokens 10

  cuda-test:
    name: CUDA Test (GPU Required)
    # Use GPU-powered runners when available, otherwise skip
    runs-on: ${{ github.repository_owner == 'lucky-tensor' && 'gpu-runners' || 'ubuntu-latest' }}
    timeout-minutes: 30
    # Only run CUDA tests when explicitly requested or on workflow dispatch
    if: contains(github.event.pull_request.labels.*.name, 'test-gpu') || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Check for GPU hardware
      id: gpu-check
      run: |
        if command -v nvidia-smi &> /dev/null; then
          if nvidia-smi &> /dev/null; then
            echo "gpu_available=true" >> $GITHUB_OUTPUT
            echo "✅ GPU detected:"
            nvidia-smi --query-gpu=name,memory.total,driver_version --format=csv,noheader
          else
            echo "gpu_available=false" >> $GITHUB_OUTPUT
            echo "⚠️  nvidia-smi found but no GPU detected"
          fi
        else
          echo "gpu_available=false" >> $GITHUB_OUTPUT
          echo "ℹ️  No GPU detected, will install CUDA for compilation only"
        fi

    - name: Install CUDA and NVIDIA drivers
      if: steps.gpu-check.outputs.gpu_available != 'true'
      run: |
        chmod +x ./installers/setup-nvidia.sh
        ./installers/setup-nvidia.sh

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Cache model files
      uses: actions/cache@v3
      with:
        path: examples/phi/setup
        key: phi-models-${{ hashFiles('examples/phi/setup/setup.sh') }}

    - name: Run setup script if needed
      working-directory: examples/phi
      run: |
        if [ "${{ steps.gpu-check.outputs.gpu_available }}" != "true" ]; then
          echo "⏭️ Skipping model setup - CUDA test will be skipped"
          exit 0
        fi
        if [ ! -f setup/*.gguf ]; then
          bash ./setup/setup.sh
        else
          echo "Model files already exist, skipping setup"
        fi

    - name: Run phi example with CUDA
      id: cuda-test
      working-directory: examples/phi
      timeout-minutes: 5
      env:
        LD_LIBRARY_PATH: "/usr/local/cuda-12.2/lib64:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
      run: |
        if [ "${{ steps.gpu-check.outputs.gpu_available }}" != "true" ]; then
          echo "⏭️ Skipping CUDA test - no physical GPU available"
          echo "conclusion=skipped" >> $GITHUB_OUTPUT
          exit 0
        fi
        echo "🚀 Running Phi-3 model with CUDA..."
        echo "✅ Using physical GPU acceleration"
        cargo run --release --features cuda -- --gen_tokens 10
        echo "conclusion=success" >> $GITHUB_OUTPUT
