name: Test Examples

on:
  push:
    branches: [ "main", "*dev", "ci*" ]
  pull_request:
    branches: [ "main", "*dev" ]
  workflow_dispatch:

jobs:
  test-examples:
    name: Test Examples
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [1.85, stable, beta]
        features: [cuda, metal]
        exclude:
          # Metal only works on macOS
          - os: ubuntu-latest
            features: metal
          # CUDA only works on Ubuntu (for CI)
          - os: macos-latest
            features: cuda

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy

    - name: Install CUDA (Ubuntu)
      if: matrix.os == 'ubuntu-latest' && matrix.features == 'cuda'
      run: |
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
        sudo dpkg -i cuda-keyring_1.1-1_all.deb
        sudo apt-get update
        sudo apt-get -y install cuda-compiler-12-2 cuda-libraries-dev-12-2 cuda-driver-dev-12-2 cuda-cudart-dev-12-2

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2


    - name: Test llama example
      working-directory: examples/llama
      continue-on-error: true
      run: cargo build --features ${{ matrix.features }} --verbose

    - name: Test moondream example
      working-directory: examples/moondream
      continue-on-error: true
      run: cargo build --features ${{ matrix.features }} --verbose

    - name: Test phi example
      working-directory: examples/phi
      continue-on-error: true
      run: cargo build --features ${{ matrix.features }} --verbose

    - name: Test qwen example
      working-directory: examples/qwen
      continue-on-error: true
      run: cargo build --features ${{ matrix.features }} --verbose

    - name: Test simple example (CPU only)
      working-directory: examples/simple
      continue-on-error: true
      run: cargo build --verbose

    - name: Test train_math_net example
      working-directory: examples/train_math_net
      continue-on-error: true
      run: cargo build --features ${{ matrix.features }} --verbose

    - name: Test whisper example
      working-directory: examples/whisper
      continue-on-error: true
      run: cargo build --features ${{ matrix.features }} --verbose

    - name: Test yolo_v8 example
      working-directory: examples/yolo_v8
      continue-on-error: true
      run: cargo build --features ${{ matrix.features }} --verbose
