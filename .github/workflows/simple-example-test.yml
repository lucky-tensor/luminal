name: Simple Example Test

on:
  push:
    branches: [ "main", "*dev", "ci*" ]
  pull_request:
    branches: [ "main", "*dev" ]
  workflow_dispatch:

jobs:
  multi-platform-test:
    name: Multi-Platform Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        features: [cpu, metal]
        exclude:
          # Metal only works on macOS
          - os: ubuntu-latest
            features: metal

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Run simple example
      run: cargo run --manifest-path examples/simple/Cargo.toml --features ${{ matrix.features }}

  cuda-test:
    name: CUDA Test (GPU Required)
    # Use GitHub's GPU-powered runners when available
    # Fallback to standard runners for development/testing
    runs-on: ${{ github.repository_owner == 'lucky-tensor' && 'gpu-runners' || 'ubuntu-latest' }}
    timeout-minutes: 30
    # Only run CUDA tests when explicitly requested via label
    if: contains(github.event.pull_request.labels.*.name, 'test-gpu') || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Check for GPU hardware
      id: gpu-check
      run: |
        if command -v nvidia-smi &> /dev/null; then
          if nvidia-smi &> /dev/null; then
            echo "gpu_available=true" >> $GITHUB_OUTPUT
            echo "‚úÖ GPU detected:"
            nvidia-smi --query-gpu=name,memory.total --format=csv,noheader
          else
            echo "gpu_available=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  nvidia-smi found but no GPU detected"
          fi
        else
          echo "gpu_available=false" >> $GITHUB_OUTPUT
          echo "‚ÑπÔ∏è  No GPU detected, will install CUDA for compilation only"
        fi

    - name: Install CUDA and NVIDIA drivers
      if: steps.gpu-check.outputs.gpu_available != 'true'
      run: |
        chmod +x ./installers/setup-nvidia.sh
        ./installers/setup-nvidia.sh

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Run simple example with CUDA
      timeout-minutes: 10
      env:
        LD_LIBRARY_PATH: "/usr/local/cuda-12.2/lib64:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
      run: |
        echo "üöÄ Running CUDA example..."
        if [ "${{ steps.gpu-check.outputs.gpu_available }}" == "true" ]; then
          echo "‚úÖ Using physical GPU acceleration"
        else
          echo "‚ö†Ô∏è  Running in CPU simulation mode (no physical GPU)"
        fi
        cargo run --manifest-path examples/simple/Cargo.toml --features cuda